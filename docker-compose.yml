version: "3"

services:
  identity-service:
    build: identity-service
    image: cc-dev-identity-service:1.0.0
    environment:
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DB: $MYSQL_DB
    volumes:
      - ./identity-service:/usr/src/app/identity-service
    depends_on:
      - db
    links:
      - db
    ports:
      - $IDENTITY_PORT:80

  websocket_service:
    build: websocket-service
    image: cc-dev-websocket-service:1.0.0
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_CACHE_DB_NUM: 0
      REDIS_SIDEKIQ_DB_NUM: 10
    volumes:
      - ./websocket-service:/usr/src/app
    links:
#      - redis
      - identity-service
      - kafka
    depends_on:
#      - redis
      - identity-service
      - kafka
    ports:
      - $WEBSOCKET_PORT:80

  message_persistence_service:
    build: message-persistence-service
    image: cc-dev-message-persistence-service:1.0.0
    environment:
      PYTHONUNBUFFERED: 1
      MYSQL_HOST: db
      MYSQL_PORT: 3306
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DB: $MYSQL_DB
    depends_on:
      - db
      - kafka
    links:
      - db
      - kafka

#  redis:
#    image: redis:4.0-alpine
#    ports:
#      - 6380:6379
#    command: ['redis-server']
#    volumes:
#      - redis-data:/data

  zookeeper:
    image: wurstmeister/zookeeper
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:SASL_PLAINTEXT
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
#      KAFKA_OPTS: "-Djava.security.auth.login.config=/etc/kafka/kafka_server_jaas.conf"
#      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
#      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
    depends_on:
      - zookeeper
#    volumes:
#      - ./:/etc/kafka

  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: 'devpass'
      MYSQL_DATABASE: $MYSQL_DB
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
    ports:
      - 3380:3306
    expose:
      - 3380
#    volumes:
#      - "./db/data:/var/lib/mysql"
#      - "./db/initdb:/docker-entrypoint-initdb.d/:ro"
#
  adminer:
    image: adminer
    restart: always
    ports:
      - 8001:8080

#volumes:
#  redis-data:
#  db-data:
