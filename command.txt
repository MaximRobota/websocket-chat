https://hub.docker.com/

docker ps -a (ls)
docker rm -v $(docker ps -aq -f status=exited) (Удалить неиспольз контейнеры)
docker images
docker rmi 1c61205f8b8f 1c61205f8b82 (удалить образы)
docker rmi $(docker images -f "dangling=true" -q) remove all  _< none >_ images
docker rmi $(docker images --filter "dangling=true" -q --no-trunc)

start:
    docker build . -t flaskr
    docker-compose build
    docker-compose up (-d)
    docker-compose ps (ls images)
    docker-compose up -d db redis (install)

stop:
    docker stop 93002b70cdeb

Python:
    pip freeze (ls)
    pip install socketio (i)
    pip install -r requirements.txt (package install)
    pip freeze > requirements.txt  (add packages to requirements.txt)

DB:
    from app import db
    from message_persistence_service import db
    db.create_all()
    db.drop_all()

    from message_persistence_service import Events
    data = Events('uid_test', 'Message text')
    db.session.add(data)
    db.session.commit()

Events.query.all()
    db.session.delete(Events.query.filter_by(id=1).first())

Migrations:
    python message_persistence_service.py db init
    python message_persistence_service.py db migrate
    python message_persistence_service.py db upgrade
    python message_persistence_service.py db --help

Start local server:
    python message_persistence_service.py runserver

Start test:
    pytest test_main.py -s